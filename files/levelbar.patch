diff --git a/Graphics/UI/Gtk.chs b/Graphics/UI/Gtk.chs
index 62b0346..5752a13 100644
--- a/Graphics/UI/Gtk.chs
+++ b/Graphics/UI/Gtk.chs
@@ -93,9 +93,6 @@ module Graphics.UI.Gtk (
   module Graphics.UI.Gtk.Display.AccelLabel,
   module Graphics.UI.Gtk.Display.Image,
   module Graphics.UI.Gtk.Display.Label,
-#if GTK_CHECK_VERSION(3,6,0)
-  module Graphics.UI.Gtk.Display.LevelBar,
-#endif
   module Graphics.UI.Gtk.Display.ProgressBar,
   module Graphics.UI.Gtk.Display.Spinner,
   module Graphics.UI.Gtk.Display.Statusbar,
@@ -364,9 +361,6 @@ import Graphics.UI.Gtk.Windows.WindowGroup
 import Graphics.UI.Gtk.Display.AccelLabel
 import Graphics.UI.Gtk.Display.Image
 import Graphics.UI.Gtk.Display.Label
-#if GTK_CHECK_VERSION(3,6,0)
-import Graphics.UI.Gtk.Display.LevelBar
-#endif
 import Graphics.UI.Gtk.Display.ProgressBar
 import Graphics.UI.Gtk.Display.Spinner
 import Graphics.UI.Gtk.Display.Statusbar
diff --git a/Graphics/UI/Gtk/Display/LevelBar.chs b/Graphics/UI/Gtk/Display/LevelBar.chs
deleted file mode 100644
index 34da19f..0000000
--- a/Graphics/UI/Gtk/Display/LevelBar.chs
+++ /dev/null
@@ -1,196 +0,0 @@
-{-# LANGUAGE CPP #-}
--- -*-haskell-*-
---  GIMP Toolkit (GTK) Widget LevelBar
---
---  Author : Vincent Hanquez
---
---  Copyright (C) 2014 Vincent Hanquez
---  Copyright (C) 1999-2005 Axel Simon
---
---  This library is free software; you can redistribute it and/or
---  modify it under the terms of the GNU Lesser General Public
---  License as published by the Free Software Foundation; either
---  version 2.1 of the License, or (at your option) any later version.
---
---  This library is distributed in the hope that it will be useful,
---  but WITHOUT ANY WARRANTY; without even the implied warranty of
---  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
---  Lesser General Public License for more details.
---
--- |
--- Maintainer  : gtk2hs-users@lists.sourceforge.net
--- Stability   : provisional
--- Portability : portable (depends on GHC)
---
--- A widget which indicates progress visually
---
-module Graphics.UI.Gtk.Display.LevelBar (
--- * Detail
---
--- | The 'LevelBar' is typically used to display level indicator
-
--- * Class Hierarchy
--- |
--- @
--- |  'GObject'
--- |   +----'Object'
--- |         +----'Widget'
--- |               +----LevelBar
--- @
-
--- * Types
-#if GTK_CHECK_VERSION(3,6,0)
-  LevelBar,
-  LevelBarClass,
-  castToLevelBar, gTypeLevelBar,
-  toLevelBar,
-
--- * Constructors
-  levelBarNew,
-
--- * Methods
-  levelBarSetMode,
-  levelBarGetMode,
-  levelBarAddOffsetValue,
-  levelBarRemoveOffsetValue,
-  levelBarGetOffsetValue,
-
--- * Attributes
-#if GTK_CHECK_VERSION(3,8,0)
-  levelBarInverted,
-#endif
-  levelBarMaxValue,
-  levelBarMinValue,
-  levelBarValue,
-  levelBarMode
-#endif
-  ) where
-
-#if GTK_CHECK_VERSION(3,6,0)
-import Control.Monad    (liftM)
-
-import System.Glib.FFI
-import System.Glib.UTFString
-import System.Glib.Attributes
-import System.Glib.Properties
-import Graphics.UI.Gtk.Abstract.Object  (makeNewObject)
-{#import Graphics.UI.Gtk.Types#}
-import Graphics.UI.Gtk.General.Enums (LevelBarMode(..))
-
-{# context lib="gtk" prefix="gtk" #}
-
---------------------
--- Constructors
-
--- | Creates a new 'LevelBar'.
---
-levelBarNew :: IO LevelBar
-levelBarNew =
-  makeNewObject mkLevelBar $
-  liftM (castPtr :: Ptr Widget -> Ptr LevelBar) $
-  {# call unsafe level_bar_new #}
-
---------------------
--- Methods
-
--- | Sets the value of the "mode" property.
---
-levelBarSetMode :: LevelBarClass self => self -> LevelBarMode -> IO ()
-levelBarSetMode self mode =
-  {#call level_bar_set_mode #} (toLevelBar self) ((fromIntegral . fromEnum) mode)
-
--- | Returns the value of the "mode" property.
-levelBarGetMode :: LevelBarClass self => self -> IO LevelBarMode
-levelBarGetMode self =
-  liftM (toEnum . fromIntegral) $
-  {#call level_bar_get_mode #}
-    (toLevelBar self)
-
--- | Add a new offset marker at the position specified by @value
---
-levelBarAddOffsetValue :: (LevelBarClass self, GlibString string) => self
- -> string -- ^ @name@ - Offset name
- -> Double -- ^ @value@ - Offset position
- -> IO ()
-levelBarAddOffsetValue self name value =
-  withUTFString name $ \namePtr ->
-  {# call unsafe level_bar_add_offset_value #}
-    (toLevelBar self)
-    namePtr
-    (realToFrac value)
-
--- | Add a new offset marker at the position specified by @value
---
-levelBarRemoveOffsetValue :: (LevelBarClass self, GlibString string) => self
- -> string
- -> IO ()
-levelBarRemoveOffsetValue self name =
-  withUTFString name $ \namePtr ->
-  {# call unsafe level_bar_remove_offset_value #}
-    (toLevelBar self)
-    namePtr
-
--- | Returns the current fraction of the task that's been completed.
---
-levelBarGetOffsetValue :: (LevelBarClass self, GlibString string) => self
- -> string
- -> IO Double -- ^ returns the value of the offset
-levelBarGetOffsetValue self name =
-  alloca $ \dPtr ->
-  withUTFString name $ \namePtr -> do
-    {# call unsafe level_bar_get_offset_value #}
-      (toLevelBar self) namePtr dPtr
-    liftM realToFrac $ peek dPtr
-
---------------------
--- Attributes
-
-#if GTK_CHECK_VERSION(3,8,0)
--- | Level bars normally grow from top to bottom or left to right. Inverted level bars grow in the opposite direction.
---
--- Default value: FALSE
---
--- Since 3.8
-levelBarInverted :: LevelBarClass self => Attr self Bool
-levelBarInverted = newAttrFromBoolProperty "inverted"
-#endif
-
--- | The "value" property determines the currently filled value of the level bar.
---
--- Allowed values: >= 0
---
--- Default value: 0
---
-levelBarValue :: LevelBarClass self => Attr self Double
-levelBarValue = newAttrFromDoubleProperty "value"
-
--- | The "min-value" property determines the minimum value of the interval that can be displayed by the bar.
---
--- Allowed values: >= 0
---
--- Default value: 0
---
-levelBarMinValue :: LevelBarClass self => Attr self Double
-levelBarMinValue = newAttrFromDoubleProperty "min-value"
-
--- | The "max-value" property determaxes the maximum value of the interval that can be displayed by the bar.
---
--- Allowed values: >= 0
---
--- Default value: 1
-levelBarMaxValue :: LevelBarClass self => Attr self Double
-levelBarMaxValue = newAttrFromDoubleProperty "max-value"
-
--- | The "bar-mode" property determines the way LevelBar interprets the
--- value properties to draw the level fill area. Specifically, when the value is
--- LevelBarModeContinous, LevelBar will draw a single block
--- representing the current value in that area; when the value is
--- LevelBarModeDiscrete, the widget will draw a succession of separate
--- blocks filling the draw area, with the number of blocks being equal to the
--- units separating the integral roundings of "min-value" and "max-value".
---
--- Default value: LevelBarModeContinuous
-levelBarMode :: LevelBarClass self => Attr self LevelBarMode
-levelBarMode = newAttr levelBarGetMode levelBarSetMode
-
-#endif
diff --git a/Graphics/UI/Gtk/Gdk/PixbufAnimation.chs b/Graphics/UI/Gtk/Gdk/PixbufAnimation.chs
index 2452883..4e38f33 100644
--- a/Graphics/UI/Gtk/Gdk/PixbufAnimation.chs
+++ b/Graphics/UI/Gtk/Gdk/PixbufAnimation.chs
@@ -172,7 +172,7 @@ pixbufAnimationGetIter self tv = maybeWith with tv $ \stPtr ->
 --   the image.
 --
 pixbufAnimationIsStaticImage :: PixbufAnimation
-                             -> IO Bool          -- ^ TRUE if the "animation" was really just an image
+                             -> IO Bool          -- ^ @True@ if the "animation" was really just an image
 pixbufAnimationIsStaticImage self = liftM toBool $ {#call unsafe pixbuf_animation_is_static_image#} self
 
 
diff --git a/Graphics/UI/Gtk/General/Enums.chs b/Graphics/UI/Gtk/General/Enums.chs
index 4c081ec..25061aa 100644
--- a/Graphics/UI/Gtk/General/Enums.chs
+++ b/Graphics/UI/Gtk/General/Enums.chs
@@ -47,9 +47,6 @@ module Graphics.UI.Gtk.General.Enums (
 #endif
   DirectionType(..),
   Justification(..),
-#if GTK_CHECK_VERSION(3,6,0)
-  LevelBarMode(..),
-#endif
 #if GTK_MAJOR_VERSION < 3
 #ifndef DISABLE_DEPRECATED
   MatchType(..),
@@ -255,10 +252,6 @@ instance Flags DestDefaults
 --
 {#enum Justification {underscoreToCase} deriving (Eq,Show)#}
 
-#if GTK_CHECK_VERSION(3,6,0)
-{#enum LevelBarMode {underscoreToCase} deriving (Eq,Show)#}
-#endif
-
 #if GTK_MAJOR_VERSION < 3
 #ifndef DISABLE_DEPRECATED
 -- | Some kind of string search options
diff --git a/Graphics/UI/Gtk/Types.chs b/Graphics/UI/Gtk/Types.chs
index 38d9d01..0a3cace 100644
--- a/Graphics/UI/Gtk/Types.chs
+++ b/Graphics/UI/Gtk/Types.chs
@@ -578,10 +578,6 @@ module Graphics.UI.Gtk.Types (
   toProgressBar, 
   mkProgressBar, unProgressBar,
   castToProgressBar, gTypeProgressBar,
-  LevelBar(LevelBar), LevelBarClass,
-  toLevelBar, 
-  mkLevelBar, unLevelBar,
-  castToLevelBar, gTypeLevelBar,
   Adjustment(Adjustment), AdjustmentClass,
   toAdjustment, 
   mkAdjustment, unAdjustment,
@@ -4210,30 +4206,6 @@ gTypeProgressBar :: GType
 gTypeProgressBar =
   {# call fun unsafe gtk_progress_bar_get_type #}
 
--- ******************************************************************* LevelBar
-
-{#pointer *GtkLevelBar as LevelBar foreign newtype #} deriving (Eq,Ord)
-
-mkLevelBar = (LevelBar, objectUnrefFromMainloop)
-unLevelBar (LevelBar o) = o
-
-class WidgetClass o => LevelBarClass o
-toLevelBar :: LevelBarClass o => o -> LevelBar
-toLevelBar = unsafeCastGObject . toGObject
-
-instance LevelBarClass LevelBar
-instance WidgetClass LevelBar
-instance GObjectClass LevelBar where
-  toGObject = GObject . castForeignPtr . unLevelBar
-  unsafeCastGObject = LevelBar . castForeignPtr . unGObject
-
-castToLevelBar :: GObjectClass obj => obj -> LevelBar
-castToLevelBar = castTo gTypeLevelBar "LevelBar"
-
-gTypeLevelBar :: GType
-gTypeLevelBar =
-  {# call fun unsafe gtk_level_bar_get_type #}
-
 -- ***************************************************************** Adjustment
 
 {#pointer *GtkAdjustment as Adjustment foreign newtype #} deriving (Eq,Ord)
diff --git a/gtk3.cabal b/gtk3.cabal
index c0b99e2..016c1bd 100644
--- a/gtk3.cabal
+++ b/gtk3.cabal
@@ -179,7 +179,6 @@ Library
           Graphics.UI.Gtk.Display.Image
           Graphics.UI.Gtk.Display.Label
           Graphics.UI.Gtk.Display.ProgressBar
-          Graphics.UI.Gtk.Display.LevelBar
           Graphics.UI.Gtk.Display.Spinner
           Graphics.UI.Gtk.Display.Statusbar
           Graphics.UI.Gtk.Display.StatusIcon
diff --git a/hierarchy3.list b/hierarchy3.list
index b1d102b..4f33ad1 100755
--- a/hierarchy3.list
+++ b/hierarchy3.list
@@ -170,7 +170,6 @@
                     GtkVSeparator
                 GtkInvisible
                 GtkProgressBar
-                GtkLevelBar if gtk-3.6
         GtkAdjustment
         GtkIMContext
                 GtkIMMulticontext
